(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{325:function(a,v,_){"use strict";_.r(v);var t=_(7),s=Object(t.a)({},(function(){var a=this,v=a._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[v("h1",{attrs:{id:"_01-java概述-环境搭建"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_01-java概述-环境搭建"}},[a._v("#")]),a._v(" 01.Java概述&环境搭建")]),a._v(" "),v("h2",{attrs:{id:"java语言概述"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#java语言概述"}},[a._v("#")]),a._v(" Java语言概述")]),a._v(" "),v("p",[a._v("Java是"),v("strong",[a._v("SUN(Stanford University Network，斯坦福大学网络公司) 1995")]),a._v("年推出的一门高级编程语言。")]),a._v(" "),v("p",[a._v("是一种面向Internet的编程语言。Java一开始富有吸引力是因为Java程序可以在Web浏览器中运行。这些Java程序被称为Java小程序（applet）。applet使用现代的图形用户界面与Web用户进行交互。 applet内嵌在HTML代码中。")]),a._v(" "),v("p",[a._v("随着Java技术在web方面的不断成熟，已经成为Web应用程序的首选开发语言。")]),a._v(" "),v("p",[a._v("后台开发：Java、PHP、Python、Go、Node.js")]),a._v(" "),v("h3",{attrs:{id:"java技术体系平台"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#java技术体系平台"}},[a._v("#")]),a._v(" Java技术体系平台")]),a._v(" "),v("p",[a._v("Java SE(Java Standard Edition)标准版：")]),a._v(" "),v("blockquote",[v("p",[a._v("支持面向桌面级应用（如Windows下的应用程序）的Java平台，提供了完整的Java核心API，此版本以前称为J2SE")])]),a._v(" "),v("p",[a._v("Java EE(Java Enterprise Edition)企业版：")]),a._v(" "),v("blockquote",[v("p",[a._v("是为开发企业环境下的应用程序提供的一套解决方案。该技术体系中包含的技术如:Servlet、Jsp等，主要针对于Web应用程序开发。版本以前称为J2EE")])]),a._v(" "),v("p",[a._v("Java ME(Java Micro Edition)小型版：")]),a._v(" "),v("blockquote",[v("p",[a._v("支持Java程序运行在移动终端（手机、PDA）上的平台，对Java API有所精简，并加入了针对移动终端的支持，此版本以前称为J2ME")])]),a._v(" "),v("p",[a._v("Java Card：")]),a._v(" "),v("blockquote",[v("p",[a._v("支持一些Java小程序（Applets）运行在小内存设备（如智能卡）上的平台")])]),a._v(" "),v("h3",{attrs:{id:"java在各领域的应用"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#java在各领域的应用"}},[a._v("#")]),a._v(" Java在各领域的应用")]),a._v(" "),v("p",[a._v("从Java的应用领域来分，Java语言的应用方向主要表现在以下几个方面：")]),a._v(" "),v("ul",[v("li",[v("strong",[a._v("企业级应用：")]),a._v(" 主要指复杂的大企业的软件系统、各种类型的网站。Java的安全机制以及它的跨平台的优势，使它在分布式系统领域开发中有广泛应用。应用领域包括金融、电信、交通、电子商务等。")]),a._v(" "),v("li",[v("strong",[a._v("Android平台应用：")]),a._v(" Android应用程序使用Java语言编写。Android开发水平的高低很大程度上取决于Java语言核心能力是否扎实。")]),a._v(" "),v("li",[v("strong",[a._v("大数据平台开发：")]),a._v(" 各类框架有Hadoop，spark，storm，flink等，就这类技术生态圈来讲，还有各种中间件如flume，kafka，sqoop等等 ，这些框架以及工具大多数是用Java编写而成，但提供诸如Java，scala，Python，R等各种语言API供编程。")]),a._v(" "),v("li",[v("strong",[a._v("移动领域应用：")]),a._v(" 主要表现在消费和嵌入式领域，是指在各种小型设备上的应用，包括手机、PDA、机顶盒、汽车通信设备等。")])]),a._v(" "),v("h3",{attrs:{id:"java语言的诞生"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#java语言的诞生"}},[a._v("#")]),a._v(" Java语言的诞生")]),a._v(" "),v("p",[a._v("java之父James Gosling团队在开发”Green”项目时，发现C缺少垃圾回收系统，还有可移植的安全性、分布程序设计和多线程功能。最后，他们想要一种易于移植到各种设备上的平台。")]),a._v(" "),v("p",[a._v("Java确实是从C语言和C++语言继承了许多成份，甚至可以将Java看成是"),v("strong",[a._v("类C语言")]),a._v("发展和衍生的产物。比如Java语言的变量声明，操作符形式，参数传递，流程控制等方面和C语言、C++语言完全相同。")]),a._v(" "),v("p",[a._v("但同时，Java是一个"),v("strong",[a._v("纯粹的面向对象")]),a._v("的程序设计语言，它继承了C++语言面向对象技术的核心。Java "),v("strong",[a._v("舍弃了C语言中容易引起错误的指针")]),a._v(" （以引用取代）、运算符重载（operatoroverloading）、多重继承（以接口取代）等特性， "),v("strong",[a._v("增加了垃圾回收器功能")]),a._v(" 用于回收不再被引用的对象所占据的内存空间。")]),a._v(" "),v("p",[a._v("JDK1.5又引入了泛型编程（Generic Programming）、类型安全的枚举、不定长参数和自动装/拆箱。")]),a._v(" "),v("h3",{attrs:{id:"主要特性"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#主要特性"}},[a._v("#")]),a._v(" 主要特性")]),a._v(" "),v("ul",[v("li",[v("strong",[a._v("Java语言是易学的。")]),a._v(" Java语言的语法与C语言和C++语言很接近，使得大多数程序员很容易学习和使用Java。")]),a._v(" "),v("li",[v("strong",[a._v("Java语言是强制面向对象的。")]),a._v(" Java语言提供类、接口和继承等原语，为了简单起见，只支持类之间的单继承，但支持接口之间的多继承，并支持类与接口之间的实现机制（关键字为implements）。")]),a._v(" "),v("li",[v("strong",[a._v("Java语言是分布式的。")]),a._v(" Java语言支持Internet应用的开发，在基本的Java应用编程接口中有一个网络应用编程接口（java net），它提供了用于网络应用编程的类库，包括URL、URLConnection、Socket、ServerSocket等。Java的RMI（远程方法激活）机制也是开发分布式应用的重要手段。")]),a._v(" "),v("li",[v("strong",[a._v("Java语言是健壮的。")]),a._v(" Java的强类型机制、异常处理、垃圾的自动收集等是Java程序健壮性的重要保证。对指针的丢弃是Java的明智选择。")]),a._v(" "),v("li",[v("strong",[a._v("Java语言是安全的。")]),a._v(" Java通常被用在网络环境中，为此，Java提供了一个安全机制以防恶意代码的攻击。如：安全防范机制（类ClassLoader），如分配不同的名字空间以防替代本地的同名类、字节代码检查。")]),a._v(" "),v("li",[v("strong",[a._v("Java语言是体系结构中立的。")]),a._v(" Java程序（后缀为java的文件）在Java平台上被编译为体系结构中立的字节码格式（后缀为class的文件），然后可以在实现这个Java平台的任何系统中运行。")]),a._v(" "),v("li",[v("strong",[a._v("Java语言是解释型的。")]),a._v(" 如前所述，Java程序在Java平台上被编译为字节码格式，然后可以在实现这个Java平台的任何系统的解释器中运行。")]),a._v(" "),v("li",[a._v("**Java是性能略高的。**与那些解释型的高级脚本语言相比，Java的性能还是较优的。")]),a._v(" "),v("li",[v("strong",[a._v("Java语言是原生支持多线程的。")]),a._v(" 在Java语言中，线程是一种特殊的对象，它必须由Thread类或其子（孙）类来创建。")])]),a._v(" "),v("h3",{attrs:{id:"java语言的特点"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#java语言的特点"}},[a._v("#")]),a._v(" Java语言的特点")]),a._v(" "),v("p",[v("strong",[a._v("特点一：面向对象")])]),a._v(" "),v("ul",[v("li",[v("strong",[a._v("两个基本概念")]),a._v("： 类、对象")]),a._v(" "),v("li",[v("strong",[a._v("三大特性")]),a._v("： 封装、继承、多态")])]),a._v(" "),v("p",[v("strong",[a._v("特点二：健壮性")])]),a._v(" "),v("ul",[v("li",[a._v("吸收了C/C++语言的优点，但去掉了其影响程序健壮性的部分（如指针、内存的申请与释放等），提供了一个相对安全的内存管理和访问机制。")])]),a._v(" "),v("p",[v("strong",[a._v("特点三：跨平台性")])]),a._v(" "),v("ul",[v("li",[v("strong",[a._v("跨平台性")]),a._v("： 通过Java语言编写的应用程序在不同的系统平台上都可以运行。“"),v("strong",[a._v("Write once , Run Anywhere")]),a._v("”")]),a._v(" "),v("li",[v("strong",[a._v("原理")]),a._v("： 只要在需要运行 java 应用程序的操作系统上，先安装一个Java虚拟机 (JVM "),v("strong",[a._v("J")]),a._v("ava "),v("strong",[a._v("V")]),a._v("irtual "),v("strong",[a._v("M")]),a._v("achine)即可。由JVM来负责Java程序在该系统中的运行。")])]),a._v(" "),v("h3",{attrs:{id:"跨平台性"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#跨平台性"}},[a._v("#")]),a._v(" 跨平台性")]),a._v(" "),v("p",[a._v("因为有了JVM，同一个Java 程序在三个不同的操作系统中都可以执行。这样就实现了Java 程序的跨平台性。")]),a._v(" "),v("p",[v("img",{attrs:{src:"https://qaomuu-blog.oss-cn-hangzhou.aliyuncs.com/aY-melPeKPsVklQ1EFivXUe3td3yBtnNBIOvbOMjuXI.png",alt:"image"}})]),a._v(" "),v("h3",{attrs:{id:"垃圾回收"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#垃圾回收"}},[a._v("#")]),a._v(" 垃圾回收")]),a._v(" "),v("p",[a._v("不再使用的内存空间应回收——垃圾回收。在C/C++等语言中，由程序员负责回收无用内存。Java 语言消除了程序员回收无用内存空间的责任：它提供一种系统级线程跟踪存储空间的分配情况。并在JVM空闲时，检查并释放那些可被释放的存储空间。")]),a._v(" "),v("p",[a._v("垃圾回收在Java程序运行过程中自动进行，程序员无法精确控制和干预。Java程序还是会出现内存泄漏和内存溢出的问题。")]),a._v(" "),v("h2",{attrs:{id:"jdk、jre、jvm"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#jdk、jre、jvm"}},[a._v("#")]),a._v(" JDK、JRE、JVM")]),a._v(" "),v("p",[a._v("**JDK(Java Development Kit Java开发工具包)：**JDK是提供给Java开发人员使用的，其中包含了java的开发工具，也包括了JRE。所以安装了JDK，就不用在单独安装JRE了。")]),a._v(" "),v("p",[a._v("其中的开发工具：编译工具(javac.exe) 打包工具(jar.exe)等。")]),a._v(" "),v("p",[a._v("**JRE(Java Runtime Environment Java运行环境)：**包括Java虚拟机(JVM Java Virtual Machine)和Java程序所需的核心类库等，如果想要运行一个开发好的Java程序，计算机中只需要安装JRE即可。")]),a._v(" "),v("p",[v("img",{attrs:{src:"https://qaomuu-blog.oss-cn-hangzhou.aliyuncs.com/mD3NbhjpvLWuOGitupLWwpROxTLY3964PJDzTfrbq78.png",alt:"image"}})]),a._v(" "),v("blockquote",[v("p",[a._v("JDK = JRE + 开发工具集（例如Javac编译工具等）")])]),a._v(" "),v("blockquote",[v("p",[a._v("JRE = JVM + Java SE标准类库")])]),a._v(" "),v("p",[v("img",{attrs:{src:"https://qaomuu-blog.oss-cn-hangzhou.aliyuncs.com/XGS_Y9N6j8sINmuH5VsoND8m800jBPvveG1lPodhbow.png",alt:"image"}})]),a._v(" "),v("h3",{attrs:{id:"java虚拟机-java-virtal-machine"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#java虚拟机-java-virtal-machine"}},[a._v("#")]),a._v(" Java虚拟机 (Java Virtal Machine)")]),a._v(" "),v("p",[a._v("JVM是一个虚拟的计算机，具有指令集并使用不同的存储区域。负责执行指令，管理数据、内存、寄存器。")]),a._v(" "),v("p",[a._v("对于不同的平台，有不同的虚拟机。只有某平台提供了对应的java虚拟机，java程序才可在此平台运行。Java虚拟机机制屏蔽了底层运行平台的差别，实现了“一次编译，到处运行”。")]),a._v(" "),v("p",[v("img",{attrs:{src:"https://qaomuu-blog.oss-cn-hangzhou.aliyuncs.com/s0mQP-cNV5mJ71vO06uOpjLryIieogn8E31S_8ytKfs.png",alt:"image"}})]),a._v(" "),v("h4",{attrs:{id:"java虚拟机的内存划分"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#java虚拟机的内存划分"}},[a._v("#")]),a._v(" Java虚拟机的内存划分")]),a._v(" "),v("p",[a._v("为了提高运算效率，就对空间进行了不同区域的划分，因为每一片区域都有特定的处理数据方式和内存管理方式。")]),a._v(" "),v("table",[v("thead",[v("tr",[v("th",[a._v("区域名称")]),a._v(" "),v("th",[a._v("作用")])])]),a._v(" "),v("tbody",[v("tr",[v("td",[a._v("寄存器")]),a._v(" "),v("td",[a._v("给CPU使用，和开发无关")])]),a._v(" "),v("tr",[v("td",[a._v("本地方法栈")]),a._v(" "),v("td",[a._v("JVM在使用操作系统功能的时候使用，和开发无关")])]),a._v(" "),v("tr",[v("td",[a._v("方法区")]),a._v(" "),v("td",[a._v("存储可以运行的class文件")])]),a._v(" "),v("tr",[v("td",[a._v("堆内存")]),a._v(" "),v("td",[a._v("存储对象或者数组，new来创建的，都存储在堆内存")])]),a._v(" "),v("tr",[v("td",[a._v("方法栈")]),a._v(" "),v("td",[a._v("方法运行时使用的内存，比如main方法运行，进入方法栈中执行")])])])]),a._v(" "),v("h2",{attrs:{id:"环境搭建"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#环境搭建"}},[a._v("#")]),a._v(" 环境搭建")]),a._v(" "),v("h3",{attrs:{id:"下载、安装"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#下载、安装"}},[a._v("#")]),a._v(" 下载、安装")]),a._v(" "),v("p",[a._v("安装路径不要有中文或者空格等特殊符号。如果操作系统是64位的，软件尽量选择支持64位的（除非软件本身不区分）。当提示安装 JRE 时，正常在JDK安装时已经装过了，但是为了后续使用Eclipse等开发工具不报错，建议也根据提示安装JRE。")]),a._v(" "),v("h3",{attrs:{id:"配置环境变量"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#配置环境变量"}},[a._v("#")]),a._v(" 配置环境变量")]),a._v(" "),v("p",[a._v("在dos命令行中敲入javac，出现错误提示，是因为当前执行的程序在当前目录下如果不存在，windows系统会在系统中已有的一个名为path的环境变量指定的目录中查找。如果仍未找到，会出现以上的错误提示。所以进入到 jdk安装路径\\bin目录下，执行javac，会看到javac参数提示信息。")]),a._v(" "),v("p",[a._v("每次执行 java 的工具都要进入到bin目录下，是非常麻烦的。根据windows系统在查找可执行程序的原理，可以将java工具所在路径定义到 path 环境变量中，让系统帮我们去找运行执行的程序。")]),a._v(" "),v("p",[v("img",{attrs:{src:"https://qaomuu-blog.oss-cn-hangzhou.aliyuncs.com/yY7An5n9UpGRP7uLcm7B2uHFETny9mlp3dWzsXc6y2Y.png",alt:"image"}})]),a._v(" "),v("p",[v("strong",[a._v("配置方法：")])]),a._v(" "),v("ol",[v("li",[a._v("我的电脑--属性--高级系统设置--环境变量")]),a._v(" "),v("li",[a._v("编辑 path 环境变量，在变量值开始处加上java工具所在目录，后面用“ ; ”和其他值分隔开即可。")]),a._v(" "),v("li",[a._v("打开DOS命令行，任意目录下敲入javac。如果出现javac 的参数信息，配置成功。")])]),a._v(" "),v("h4",{attrs:{id:"配置一"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#配置一"}},[a._v("#")]),a._v(" 配置一")]),a._v(" "),v("ul",[v("li",[a._v("变量名："),v("code",[a._v("JAVA_HOME")])]),a._v(" "),v("li",[a._v("变量值："),v("code",[a._v("C:\\Program Files (x86)\\Java\\jdk1.8.0_91")])]),a._v(" "),v("li",[a._v("要根据自己的实际路径配置")])]),a._v(" "),v("h4",{attrs:{id:"配置二"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#配置二"}},[a._v("#")]),a._v(" 配置二")]),a._v(" "),v("ul",[v("li",[a._v("变量名："),v("code",[a._v("Path")])]),a._v(" "),v("li",[a._v("变量值："),v("code",[a._v("%JAVA_HOME%\\bin;%JAVA_HOME%\\jre\\bin;")])])]),a._v(" "),v("h4",{attrs:{id:"检测"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#检测"}},[a._v("#")]),a._v(" 检测")]),a._v(" "),v("ol",[v("li",[a._v("运行cmd")]),a._v(" "),v("li",[a._v("分别输入："),v("code",[a._v("java")]),a._v("、"),v("code",[a._v("javac")]),a._v("、"),v("code",[a._v("java -version")]),a._v("，如果出现对应信息，表示配置成功。")])])])}),[],!1,null,null,null);v.default=s.exports}}]);